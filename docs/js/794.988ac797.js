(self["webpackChunkvisual"]=self["webpackChunkvisual"]||[]).push([[794],{4794:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});var r=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},a=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("canvas",{attrs:{width:"300",height:"300"}})])}],o=(n(1539),n(4197),n(2990),n(8927),n(3105),n(5035),n(4345),n(7174),n(2846),n(4731),n(7209),n(6319),n(8867),n(7789),n(3739),n(9368),n(4483),n(2056),n(3462),n(678),n(7462),n(3824),n(5021),n(2974),n(5016),{name:"WebglGM",components:{},mounted:function(){this.init()},methods:{init:function(){var e=document.querySelector("canvas"),t=e.getContext("webgl"),n="\n        attribute vec2 position;\n        varying vec3 color;\n        void main() {\n          gl_PointSize = 1.0;\n          color = vec3(0.5 + position * 0.5 , 0.0);\n          gl_Position = vec4(position * 0.5, 1.0, 1.0);\n        }\n      ",r="\n        precision mediump float;\n        varying vec3 color;\n        void main()\n        {\n          gl_FragColor = vec4(color, 1.0);\n        }    \n      ",a=t.createShader(t.VERTEX_SHADER);t.shaderSource(a,n),t.compileShader(a);var o=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(o,r),t.compileShader(o);var i=t.createProgram();t.attachShader(i,a),t.attachShader(i,o),t.linkProgram(i),t.useProgram(i);var c=this.getPolygonPoints(3,1),l=new Float32Array(c),s=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,l,t.STATIC_DRAW);var u=t.getAttribLocation(i,"position");t.vertexAttribPointer(u,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(u),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.TRIANGLE_FAN,0,l.length/2)},getPolygonPoints:function(e,t){for(var n=2*Math.PI/e,r=0,a=[],o=0;o<e;o++)a.push(t*Math.cos(r)),a.push(t*Math.sin(r)),r+=n;return a}}}),i=o,c=n(1001),l=(0,c.Z)(i,r,a,!1,null,null,null),s=l.exports}}]);